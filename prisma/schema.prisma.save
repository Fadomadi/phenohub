// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

x// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Cultivar {
  id          Int       @id @default(autoincrement())
  name        String
  slug        String    @unique
  aka         String[]  @default([])
  cloneOnly   Boolean   @default(false)
  reportCount Int       @default(0)
  avgRating   Decimal   @default(0.0)
  imageCount  Int       @default(0)
  trending    Boolean   @default(false)
  thumbnails  String[]  @default([])
  description String?   @db.Text
  genetics    String?   @db.Text
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  reports Report[]
}

model Provider {
  id            Int       @id @default(autoincrement())
  name          String
  slug          String    @unique
  country       String
  countryFlag   String
  avgScore      Decimal   @default(0.0)
  reportCount   Int       @default(0)
  shippingScore Decimal   @default(0.0)
  vitalityScore Decimal   @default(0.0)
  website       String?
  bio           String?   @db.Text
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  reports Report[]â€º UW PICO 5.09               File: prisma/schema.prisma               Modified

    vitalityScore Decimal   @default(0.0)
    website       String?
    bio           String?   @db.Text
    createdAt     DateTime  @default(now())
    updatedAt     DateTime  @updatedAt

    reports Report[]
  }

  model Report {
    id           Int       @id @default(autoincrement())
    title        String
    slug         String    @unique
    excerpt      String    @db.Text
    content      String?   @db.Text
    authorHandle String
    shipping     Int
    vitality     Int
    stability    Int

  ^G Get Help  ^O WriteOut  ^R Read File ^Y Prev Pg   ^K Cut Text  ^C Cur Pos
  ^X Exit      ^J Justify   ^W Where is  ^V Next Pg   ^U UnCut Text^T To Spellmodel Report {
  id           Int       @id @default(autoincrement())
  title        String
  slug         String    @unique
  excerpt      String    @db.Text
  content      String?   @db.Text
  authorHandle String
  shipping     Int
 provider   Provider @relation(fields: [providerId], references: [id], onDelete: Cascade)provider   Provider @relation(fields: [providerId], references: [id], onDelete: Cascade)  vitality     Int
  stability    Int
  overall      Decimal   @default(0.0)
  likes        Int       @default(0)
  comments     Int       @default(0)
  views        Int       @default(0)
  images       String[]  @default([])
  gallery      Json?
  publishedAt  DateTime? @db.Timestamptz(6)
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt

  cultivar   Cultivar @relation(fields: [cultivarId], references: [id])
  cultivarId Int

  provider   Provider @relation(fields: [providerId], references: [id])
  providerId Int

  author   User? @relation(fields: [authorId], references: [id])
  authorId Int?

  interactions Interaction[]
}

model User {
  id              Int             @id @default(autoincrement())
  email           String          @unique
  name            String?
  username        String?         @unique
  image           String?
  role            UserRole        @default(USER)
  bio             String?         @db.Text
  plan            SubscriptionTier @default(FREE)
  createdAt       DateTime        @default(now())
  updatedAt       DateTime        @updatedAt
  stripeCustomerId String?

  reports       Report[]
  subscriptions Subscription[]
  interactions  Interaction[]
}

model Subscription {
  id              Int                @id @default(autoincrement())
  stripeSubId     String             @unique
  status          SubscriptionStatus @default(ACTIVE)
  tier            SubscriptionTier   @default(STARTER)
  currentPeriodEnd DateTime
  cancelAtPeriodEnd Boolean          @default(false)
  createdAt       DateTime           @default(now())
  updatedAt       DateTime           @updatedAt

  user   User @relation(fields: [userId], references: [id])
  userId Int
}

model Interaction {
  id        Int             @id @default(autoincrement())
  type      InteractionType
  createdAt DateTime        @default(now())
  metadata  Json?

  user   User?  @relation(fields: [userId], references: [id])
  userId Int?

  report   Report? @relation(fields: [reportId], references: [id])
  reportId Int?
}

enum InteractionType {
  LIKE
  COMMENT
  VIEW
}

enum SubscriptionStatus {
  ACTIVE
  INCOMPLETE
  TRIALING
  PAST_DUE
  CANCELED
}

enum SubscriptionTier {
  FREE
  STARTER
  PRO
  ENTERPRISE
  CUSTOM
}

enum UserRole {
  USER
  EDITOR
  ADMIN
}
